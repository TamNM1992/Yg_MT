// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YG.Data.Models;

#nullable disable

namespace YG.Data.Migrations
{
    [DbContext(typeof(YGDataContext))]
    [Migration("20221006073335_YG9")]
    partial class YG9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MonterSkill", b =>
                {
                    b.Property<Guid>("MonterID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MonterID", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("MonterSkill");
                });

            modelBuilder.Entity("SkillTypeSkill", b =>
                {
                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeSkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillId", "TypeSkillId");

                    b.HasIndex("TypeSkillId");

                    b.ToTable("SkillTypeSkill");
                });

            modelBuilder.Entity("YG.Data.Models.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdRateAtk")
                        .HasColumnType("int");

                    b.Property<int>("AdRateDef")
                        .HasColumnType("int");

                    b.Property<int>("ApRateAtk")
                        .HasColumnType("int");

                    b.Property<int>("ApRateDef")
                        .HasColumnType("int");

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<int>("Intelligent")
                        .HasColumnType("int");

                    b.Property<string>("NameAttribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.Property<int>("Tenacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Attribute");
                });

            modelBuilder.Entity("YG.Data.Models.Monter", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Atk")
                        .HasColumnType("int");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Def")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Monter");
                });

            modelBuilder.Entity("YG.Data.Models.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountDown")
                        .HasColumnType("int");

                    b.Property<string>("Des")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EffectiveTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetNum")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("YG.Data.Models.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AdRateAtk")
                        .HasColumnType("int");

                    b.Property<int>("AdRateDef")
                        .HasColumnType("int");

                    b.Property<int>("ApRateAtk")
                        .HasColumnType("int");

                    b.Property<int>("ApRateDef")
                        .HasColumnType("int");

                    b.Property<int>("AtkBase")
                        .HasColumnType("int");

                    b.Property<int>("DefBase")
                        .HasColumnType("int");

                    b.Property<int>("Intelligent")
                        .HasColumnType("int");

                    b.Property<string>("NameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeedBase")
                        .HasColumnType("int");

                    b.Property<int>("StrengBase")
                        .HasColumnType("int");

                    b.Property<int>("Tenacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("YG.Data.Models.TypeSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeSkill");
                });

            modelBuilder.Entity("MonterSkill", b =>
                {
                    b.HasOne("YG.Data.Models.Monter", null)
                        .WithMany()
                        .HasForeignKey("MonterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YG.Data.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SkillTypeSkill", b =>
                {
                    b.HasOne("YG.Data.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YG.Data.Models.TypeSkill", null)
                        .WithMany()
                        .HasForeignKey("TypeSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
